//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppView.SearchWSReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService")]
    [System.SerializableAttribute()]
    public partial class MediaDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BudgetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublishYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Budget {
            get {
                return this.BudgetField;
            }
            set {
                if ((this.BudgetField.Equals(value) != true)) {
                    this.BudgetField = value;
                    this.RaisePropertyChanged("Budget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Director {
            get {
                return this.DirectorField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorField, value) != true)) {
                    this.DirectorField = value;
                    this.RaisePropertyChanged("Director");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaID {
            get {
                return this.MediaIDField;
            }
            set {
                if ((this.MediaIDField.Equals(value) != true)) {
                    this.MediaIDField = value;
                    this.RaisePropertyChanged("MediaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublishYear {
            get {
                return this.PublishYearField;
            }
            set {
                if ((this.PublishYearField.Equals(value) != true)) {
                    this.PublishYearField = value;
                    this.RaisePropertyChanged("PublishYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SearchWSReference.ISearch")]
    public interface ISearch {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/Search", ReplyAction="http://tempuri.org/ISearch/SearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AppView.SearchWSReference.MediaDTO[]), Action="http://tempuri.org/ISearch/SearchListOf_MediaDTOFault", Name="ArrayOfMediaDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService")]
        AppView.SearchWSReference.MediaDTO[] Search(string searchType, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/Search", ReplyAction="http://tempuri.org/ISearch/SearchResponse")]
        System.Threading.Tasks.Task<AppView.SearchWSReference.MediaDTO[]> SearchAsync(string searchType, string searchText);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISearchChannel : AppView.SearchWSReference.ISearch, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchClient : System.ServiceModel.ClientBase<AppView.SearchWSReference.ISearch>, AppView.SearchWSReference.ISearch {
        
        public SearchClient() {
        }
        
        public SearchClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SearchClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AppView.SearchWSReference.MediaDTO[] Search(string searchType, string searchText) {
            return base.Channel.Search(searchType, searchText);
        }
        
        public System.Threading.Tasks.Task<AppView.SearchWSReference.MediaDTO[]> SearchAsync(string searchType, string searchText) {
            return base.Channel.SearchAsync(searchType, searchText);
        }
    }
}
