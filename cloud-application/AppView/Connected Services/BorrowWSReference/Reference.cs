//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppView.BorrowWSReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BorrowDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService")]
    [System.SerializableAttribute()]
    public partial class BorrowDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActualReturnDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BorrowDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActualReturnDate {
            get {
                return this.ActualReturnDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ActualReturnDateField, value) != true)) {
                    this.ActualReturnDateField = value;
                    this.RaisePropertyChanged("ActualReturnDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorrowDate {
            get {
                return this.BorrowDateField;
            }
            set {
                if ((object.ReferenceEquals(this.BorrowDateField, value) != true)) {
                    this.BorrowDateField = value;
                    this.RaisePropertyChanged("BorrowDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnDate {
            get {
                return this.ReturnDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnDateField, value) != true)) {
                    this.ReturnDateField = value;
                    this.RaisePropertyChanged("ReturnDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BorrowWSReference.IBorrow")]
    public interface IBorrow {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBorrow/GetBorrowData", ReplyAction="http://tempuri.org/IBorrow/GetBorrowDataResponse")]
        System.Collections.Generic.KeyValuePair<int, int>[] GetBorrowData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBorrow/GetBorrowData", ReplyAction="http://tempuri.org/IBorrow/GetBorrowDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, int>[]> GetBorrowDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBorrow/IsBorrowInserted", ReplyAction="http://tempuri.org/IBorrow/IsBorrowInsertedResponse")]
        bool IsBorrowInserted(int uID, int mediaID, string borrowDate, string returnDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBorrow/IsBorrowInserted", ReplyAction="http://tempuri.org/IBorrow/IsBorrowInsertedResponse")]
        System.Threading.Tasks.Task<bool> IsBorrowInsertedAsync(int uID, int mediaID, string borrowDate, string returnDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBorrow/IsBorrowUpdated", ReplyAction="http://tempuri.org/IBorrow/IsBorrowUpdatedResponse")]
        bool IsBorrowUpdated(string actualReturnDate, int mediaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBorrow/IsBorrowUpdated", ReplyAction="http://tempuri.org/IBorrow/IsBorrowUpdatedResponse")]
        System.Threading.Tasks.Task<bool> IsBorrowUpdatedAsync(string actualReturnDate, int mediaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBorrow/GetBorrowInfo", ReplyAction="http://tempuri.org/IBorrow/GetBorrowInfoResponse")]
        AppView.BorrowWSReference.BorrowDTO[] GetBorrowInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBorrow/GetBorrowInfo", ReplyAction="http://tempuri.org/IBorrow/GetBorrowInfoResponse")]
        System.Threading.Tasks.Task<AppView.BorrowWSReference.BorrowDTO[]> GetBorrowInfoAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBorrowChannel : AppView.BorrowWSReference.IBorrow, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorrowClient : System.ServiceModel.ClientBase<AppView.BorrowWSReference.IBorrow>, AppView.BorrowWSReference.IBorrow {
        
        public BorrowClient() {
        }
        
        public BorrowClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BorrowClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BorrowClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BorrowClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.KeyValuePair<int, int>[] GetBorrowData() {
            return base.Channel.GetBorrowData();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, int>[]> GetBorrowDataAsync() {
            return base.Channel.GetBorrowDataAsync();
        }
        
        public bool IsBorrowInserted(int uID, int mediaID, string borrowDate, string returnDate) {
            return base.Channel.IsBorrowInserted(uID, mediaID, borrowDate, returnDate);
        }
        
        public System.Threading.Tasks.Task<bool> IsBorrowInsertedAsync(int uID, int mediaID, string borrowDate, string returnDate) {
            return base.Channel.IsBorrowInsertedAsync(uID, mediaID, borrowDate, returnDate);
        }
        
        public bool IsBorrowUpdated(string actualReturnDate, int mediaID) {
            return base.Channel.IsBorrowUpdated(actualReturnDate, mediaID);
        }
        
        public System.Threading.Tasks.Task<bool> IsBorrowUpdatedAsync(string actualReturnDate, int mediaID) {
            return base.Channel.IsBorrowUpdatedAsync(actualReturnDate, mediaID);
        }
        
        public AppView.BorrowWSReference.BorrowDTO[] GetBorrowInfo() {
            return base.Channel.GetBorrowInfo();
        }
        
        public System.Threading.Tasks.Task<AppView.BorrowWSReference.BorrowDTO[]> GetBorrowInfoAsync() {
            return base.Channel.GetBorrowInfoAsync();
        }
    }
}
