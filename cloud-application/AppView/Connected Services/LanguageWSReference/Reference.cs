//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppView.LanguageWSReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanguageDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService")]
    [System.SerializableAttribute()]
    public partial class LanguageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LID {
            get {
                return this.LIDField;
            }
            set {
                if ((this.LIDField.Equals(value) != true)) {
                    this.LIDField = value;
                    this.RaisePropertyChanged("LID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LanguageWSReference.ILanguage")]
    public interface ILanguage {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILanguage/GetAllLanguage", ReplyAction="http://tempuri.org/ILanguage/GetAllLanguageResponse")]
        AppView.LanguageWSReference.LanguageDTO[] GetAllLanguage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILanguage/GetAllLanguage", ReplyAction="http://tempuri.org/ILanguage/GetAllLanguageResponse")]
        System.Threading.Tasks.Task<AppView.LanguageWSReference.LanguageDTO[]> GetAllLanguageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILanguage/IsLanguageInserted", ReplyAction="http://tempuri.org/ILanguage/IsLanguageInsertedResponse")]
        bool IsLanguageInserted(AppView.LanguageWSReference.LanguageDTO language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILanguage/IsLanguageInserted", ReplyAction="http://tempuri.org/ILanguage/IsLanguageInsertedResponse")]
        System.Threading.Tasks.Task<bool> IsLanguageInsertedAsync(AppView.LanguageWSReference.LanguageDTO language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILanguage/IsLanguageUpdated", ReplyAction="http://tempuri.org/ILanguage/IsLanguageUpdatedResponse")]
        bool IsLanguageUpdated(AppView.LanguageWSReference.LanguageDTO language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILanguage/IsLanguageUpdated", ReplyAction="http://tempuri.org/ILanguage/IsLanguageUpdatedResponse")]
        System.Threading.Tasks.Task<bool> IsLanguageUpdatedAsync(AppView.LanguageWSReference.LanguageDTO language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILanguage/IsLanguageDeleted", ReplyAction="http://tempuri.org/ILanguage/IsLanguageDeletedResponse")]
        bool IsLanguageDeleted(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILanguage/IsLanguageDeleted", ReplyAction="http://tempuri.org/ILanguage/IsLanguageDeletedResponse")]
        System.Threading.Tasks.Task<bool> IsLanguageDeletedAsync(int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILanguageChannel : AppView.LanguageWSReference.ILanguage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LanguageClient : System.ServiceModel.ClientBase<AppView.LanguageWSReference.ILanguage>, AppView.LanguageWSReference.ILanguage {
        
        public LanguageClient() {
        }
        
        public LanguageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LanguageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LanguageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LanguageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AppView.LanguageWSReference.LanguageDTO[] GetAllLanguage() {
            return base.Channel.GetAllLanguage();
        }
        
        public System.Threading.Tasks.Task<AppView.LanguageWSReference.LanguageDTO[]> GetAllLanguageAsync() {
            return base.Channel.GetAllLanguageAsync();
        }
        
        public bool IsLanguageInserted(AppView.LanguageWSReference.LanguageDTO language) {
            return base.Channel.IsLanguageInserted(language);
        }
        
        public System.Threading.Tasks.Task<bool> IsLanguageInsertedAsync(AppView.LanguageWSReference.LanguageDTO language) {
            return base.Channel.IsLanguageInsertedAsync(language);
        }
        
        public bool IsLanguageUpdated(AppView.LanguageWSReference.LanguageDTO language) {
            return base.Channel.IsLanguageUpdated(language);
        }
        
        public System.Threading.Tasks.Task<bool> IsLanguageUpdatedAsync(AppView.LanguageWSReference.LanguageDTO language) {
            return base.Channel.IsLanguageUpdatedAsync(language);
        }
        
        public bool IsLanguageDeleted(int ID) {
            return base.Channel.IsLanguageDeleted(ID);
        }
        
        public System.Threading.Tasks.Task<bool> IsLanguageDeletedAsync(int ID) {
            return base.Channel.IsLanguageDeletedAsync(ID);
        }
    }
}
